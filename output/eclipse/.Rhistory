list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
jdt.code.metrics = read.csv("single-version-ck-oo.csv", header = T, row.names = 1, sep = ';')
cval.jdt.lm.loc = cval(jdt.code.metrics,lm,bugs ~ numberOfLinesOfCode+wmc)
write.table(cval.jdt.lm.loc$avg.mae, file = "test.csv")
setwd("//home//saratkiran//Desktop//CS6890//eclipse//eclipse")
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
jdt.code.metrics = read.csv("single-version-ck-oo.csv", header = T, row.names = 1, sep = ';')
cval.jdt.lm.loc = cval(jdt.code.metrics,lm,bugs ~ numberOfLinesOfCode+wmc)
write.csv(cval.jdt.lm.loc$avg.mae, file = "test.csv")
file = single
write.csv(file,"test.csv",append = TRUE)
setwd("//home//saratkiran//Desktop//CS6890//eclipse//eclipse")
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
jdt.code.metrics = read.csv("single-version-ck-oo.csv", header = T, row.names = 1, sep = ';')
cval.jdt.lm.loc = cval(jdt.code.metrics,lm,bugs ~ numberOfLinesOfCode+wmc)
write.csv(cval.jdt.lm.loc$avg.mae, file = "test.csv")
file = single
write.csv(cval.jdt.lm.loc$avg.rcor,"test.csv",append = TRUE)
setwd("//home//saratkiran//Desktop//CS6890//eclipse//eclipse")
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
jdt.code.metrics = read.csv("single-version-ck-oo.csv", header = T, row.names = 1, sep = ';')
cval.jdt.lm.loc = cval(jdt.code.metrics,lm,bugs ~ numberOfLinesOfCode+wmc)
write.table(cval.jdt.lm.loc$avg.mae, file = "test.csv")
file = single
write.table(cval.jdt.lm.loc$avg.rcor,"test.csv",append = TRUE)
setwd("//home//saratkiran//Desktop//CS6890//eclipse//eclipse")
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
jdt.code.metrics = read.csv("single-version-ck-oo.csv", header = T, row.names = 1, sep = ';')
cval.jdt.lm.loc = cval(jdt.code.metrics,lm,bugs ~ numberOfLinesOfCode+wmc)
write.table(cval.jdt.lm.loc$avg.mae, file = "test.csv")
write("", "filename.csv", append=TRUE)
write.table(cval.jdt.lm.loc$avg.rcor,"test.csv",append = TRUE)
setwd("//home//saratkiran//Desktop//CS6890//eclipse//eclipse")
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
jdt.code.metrics = read.csv("single-version-ck-oo.csv", header = T, row.names = 1, sep = ';')
cval.jdt.lm.loc = cval(jdt.code.metrics,lm,bugs ~ numberOfLinesOfCode+wmc)
write.table(cval.jdt.lm.loc$avg.mae, file = "test.csv")
write("", "test.csv", append=TRUE)
write.table(cval.jdt.lm.loc$avg.rcor,"test.csv",append = TRUE)
setwd("//home//saratkiran//Desktop//CS6890//eclipse//eclipse")
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
jdt.code.metrics = read.csv("single-version-ck-oo.csv", header = T, row.names = 1, sep = ';')
cval.jdt.lm.loc = cval(jdt.code.metrics,lm,bugs ~ numberOfLinesOfCode+wmc)
write.table(cval.jdt.lm.loc$avg.mae, file = "test.csv")
write("", "test.csv", append=TRUE)
write.table(cval.jdt.lm.loc$avg.rcor,"test.csv",append = TRUE)
write.table(cval.jdt.lm.loc$detail.mae,"test.csv",append = TRUE)
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(filenames,1,7)
if(file_name == "top_sin"){
jdt.code <- read.csv(filepath,header = T, row.names = 1,sep = ";")
jdt.names = names(jdt.code)
for (j in jdt.names){
what.pred = paste("bugs ~ ",jdt,names)
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
if(file_name == "top_sin"){
jdt.code <- read.csv(filepath,header = T, row.names = 1,sep = ";")
jdt.names = names(jdt.code)
for (j in jdt.names){
what.pred = paste("bugs ~ ",jdt,names)
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.code <- read.csv(filepath,header = T, row.names = 1,sep = ";")
jdt.names = names(jdt.code)
for (j in jdt.names){
what.pred = paste("bugs ~ ",jdt,names)
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.code <- read.csv(filepath,header = T, row.names = 1,sep = ";")
jdt.names = names(jdt.code)
for (j in jdt.names){
what.pred = paste("bugs ~ ",jdt,names,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.code <- read.csv(filepath,header = T, row.names = 1,sep = ";")
jdt.names = names(jdt.code)
for (j in jdt.names){
print(j)
what.pred = paste("bugs ~ ",jdt,names,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.code <- read.csv(filepath,header = T, row.names = 1,sep = ";")
jdt.names = names(jdt.code)
print(jdt.names)
for (j in jdt.names){
print(j)
what.pred = paste("bugs ~ ",jdt,names,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.coders = read.csv(filepath,header = T, row.names = 1,sep = ";")
jdt.namers = names(jdt.coders)
print(jdt.namers)
for (j in jdt.namers){
print(j)
what.pred = paste("bugs ~ ",jdt.namers,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.coders = read.csv(filepath,header = T, row.names = 1,sep = ";")
print(jdt.coders)
jdt.namers = names(jdt.coders)
print(jdt.namers)
for (j in jdt.namers){
print(j)
what.pred = paste("bugs ~ ",jdt.namers,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.coders = read.csv(filepath,header = T, row.names = 1,sep = ",")
print(jdt.coders)
jdt.namers = names(jdt.coders)
print(jdt.namers)
for (j in jdt.namers){
print(j)
what.pred = paste("bugs ~ ",jdt.namers,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.coders = read.csv(filepath,header = T, row.names = 1,sep = ",")
print(jdt.coders)
jdt.namers = row.names(jdt.coders)
print(jdt.namers)
for (j in jdt.namers){
print(j)
what.pred = paste("bugs ~ ",jdt.namers,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
write.csv(cval.jdt,file = "testing.csv")
}
}
}
cval = function (dat, model, predicator, rseed =   0723)
{
set.seed(rseed)
fun = match.fun(model)
mae =  rcor = rep(0,30)
n= nrow(dat)
for (i in 1:30)
{
test = sample.int(n,n*0.2)
mod = fun ( predicator, data = dat[-test,] )
pred = predict (mod,dat[test,])
actual = dat[test,]$bugs
mae[i] = mean(abs(pred - actual))
rcor[i] = cor.test(pred,actual,method = 'spearman')$estimate
}
list(avg.mae = mean(mae), avg.rcor = mean(rcor), detail.mae = mae, detail.rcor = rcor)
}
setwd("//home//saratkiran//Desktop//CS6890//output//eclipse")
path = "/home/saratkiran/Desktop/CS6890/output/eclipse/"
filenames <- list.files(path=".",pattern="*.csv")
for(i in filenames){
filepath <- file.path(path,paste(i))
file_name = substr(i,1,7)
print(file_name)
if(file_name == "top_sin"){
jdt.coders = read.csv(filepath,header = T, row.names = 1,sep = ",")
print(jdt.coders)
jdt.namers = row.names(jdt.coders)
print(jdt.namers)
for (j in jdt.namers){
print(j)
what.pred = paste("bugs ~ ",jdt.namers,sep ="")
cval.jdt = cval(jdt.code.metrics,lm,what.pred)
csvfile = paste(j,".csv",sep="")
write.csv(cval.jdt,file = csvfile)
}
}
}
